#include <assert.h>
#include <stdio.h>
#include <stdlib.h>
#include "common.h"
#include "wc.h"
#include <string.h>
#include <ctype.h>
#include <math.h>

struct hash{

  int occurrence;
  int key;
  char* word;
};

struct wc {

  int size;
  struct hash** items; 
};

//void copy(char* word, int start, int end);
struct hash* create_hash(char* word, int index);
unsigned long hash_key(char* str,int size);
void insert_word(struct wc* wc,char* hash);

struct wc* wc_init(char *word_array, long size)
{
	struct wc *wc;
	char str[130];

	wc = (struct wc *)malloc(sizeof(struct wc));
	assert(wc);

	int words = 0;
	//get the word count, so we can make a reasonably sized hash table to fit all words
        for(int i = 0; i < size; i++){
	  if((isspace(word_array[i]) != 0 && isspace(word_array[i+1]) == 0)||(i == (size-1))){ // || (isspace(word_array[i]) != 0 && word_array[i+1] == '\0')){
	   words++;
	  }
	 }
	//		printf("words %d\n",words);
	//int word_small= 1005;
	wc->items = (struct hash**)malloc(words*sizeof(struct hash*));
	wc->size = words;
	//int start_letter = 0;
	//int end_letter=0;
	
	int letter_in=0;
